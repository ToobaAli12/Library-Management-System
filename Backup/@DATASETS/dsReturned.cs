//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace LibrarySystem {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsReturned : DataSet {
        
        private tblBarrowedDataTable tabletblBarrowed;
        
        public dsReturned() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsReturned(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblBarrowed"] != null)) {
                    this.Tables.Add(new tblBarrowedDataTable(ds.Tables["tblBarrowed"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblBarrowedDataTable tblBarrowed {
            get {
                return this.tabletblBarrowed;
            }
        }
        
        public override DataSet Clone() {
            dsReturned cln = ((dsReturned)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tblBarrowed"] != null)) {
                this.Tables.Add(new tblBarrowedDataTable(ds.Tables["tblBarrowed"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletblBarrowed = ((tblBarrowedDataTable)(this.Tables["tblBarrowed"]));
            if ((this.tabletblBarrowed != null)) {
                this.tabletblBarrowed.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsReturned";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsReturned.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletblBarrowed = new tblBarrowedDataTable();
            this.Tables.Add(this.tabletblBarrowed);
        }
        
        private bool ShouldSerializetblBarrowed() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tblBarrowedRowChangeEventHandler(object sender, tblBarrowedRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tblBarrowedDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnBarrowerID;
            
            private DataColumn columnFullname;
            
            private DataColumn columnBookNo;
            
            private DataColumn columnISBN;
            
            private DataColumn columnBookTitle;
            
            private DataColumn columnCategoryName;
            
            private DataColumn columnDateBarrowed;
            
            private DataColumn columnDateDue;
            
            private DataColumn columnDateRetured;
            
            private DataColumn columnDelayedDays;
            
            internal tblBarrowedDataTable() : 
                    base("tblBarrowed") {
                this.InitClass();
            }
            
            internal tblBarrowedDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn BarrowerIDColumn {
                get {
                    return this.columnBarrowerID;
                }
            }
            
            internal DataColumn FullnameColumn {
                get {
                    return this.columnFullname;
                }
            }
            
            internal DataColumn BookNoColumn {
                get {
                    return this.columnBookNo;
                }
            }
            
            internal DataColumn ISBNColumn {
                get {
                    return this.columnISBN;
                }
            }
            
            internal DataColumn BookTitleColumn {
                get {
                    return this.columnBookTitle;
                }
            }
            
            internal DataColumn CategoryNameColumn {
                get {
                    return this.columnCategoryName;
                }
            }
            
            internal DataColumn DateBarrowedColumn {
                get {
                    return this.columnDateBarrowed;
                }
            }
            
            internal DataColumn DateDueColumn {
                get {
                    return this.columnDateDue;
                }
            }
            
            internal DataColumn DateReturedColumn {
                get {
                    return this.columnDateRetured;
                }
            }
            
            internal DataColumn DelayedDaysColumn {
                get {
                    return this.columnDelayedDays;
                }
            }
            
            public tblBarrowedRow this[int index] {
                get {
                    return ((tblBarrowedRow)(this.Rows[index]));
                }
            }
            
            public event tblBarrowedRowChangeEventHandler tblBarrowedRowChanged;
            
            public event tblBarrowedRowChangeEventHandler tblBarrowedRowChanging;
            
            public event tblBarrowedRowChangeEventHandler tblBarrowedRowDeleted;
            
            public event tblBarrowedRowChangeEventHandler tblBarrowedRowDeleting;
            
            public void AddtblBarrowedRow(tblBarrowedRow row) {
                this.Rows.Add(row);
            }
            
            public tblBarrowedRow AddtblBarrowedRow(string BarrowerID, string Fullname, string BookNo, string ISBN, string BookTitle, string CategoryName, System.DateTime DateBarrowed, System.DateTime DateDue, System.DateTime DateRetured, System.Double DelayedDays) {
                tblBarrowedRow rowtblBarrowedRow = ((tblBarrowedRow)(this.NewRow()));
                rowtblBarrowedRow.ItemArray = new object[] {
                        BarrowerID,
                        Fullname,
                        BookNo,
                        ISBN,
                        BookTitle,
                        CategoryName,
                        DateBarrowed,
                        DateDue,
                        DateRetured,
                        DelayedDays};
                this.Rows.Add(rowtblBarrowedRow);
                return rowtblBarrowedRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tblBarrowedDataTable cln = ((tblBarrowedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tblBarrowedDataTable();
            }
            
            internal void InitVars() {
                this.columnBarrowerID = this.Columns["BarrowerID"];
                this.columnFullname = this.Columns["Fullname"];
                this.columnBookNo = this.Columns["BookNo"];
                this.columnISBN = this.Columns["ISBN"];
                this.columnBookTitle = this.Columns["BookTitle"];
                this.columnCategoryName = this.Columns["CategoryName"];
                this.columnDateBarrowed = this.Columns["DateBarrowed"];
                this.columnDateDue = this.Columns["DateDue"];
                this.columnDateRetured = this.Columns["DateRetured"];
                this.columnDelayedDays = this.Columns["DelayedDays"];
            }
            
            private void InitClass() {
                this.columnBarrowerID = new DataColumn("BarrowerID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBarrowerID);
                this.columnFullname = new DataColumn("Fullname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFullname);
                this.columnBookNo = new DataColumn("BookNo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBookNo);
                this.columnISBN = new DataColumn("ISBN", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnISBN);
                this.columnBookTitle = new DataColumn("BookTitle", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBookTitle);
                this.columnCategoryName = new DataColumn("CategoryName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCategoryName);
                this.columnDateBarrowed = new DataColumn("DateBarrowed", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateBarrowed);
                this.columnDateDue = new DataColumn("DateDue", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateDue);
                this.columnDateRetured = new DataColumn("DateRetured", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDateRetured);
                this.columnDelayedDays = new DataColumn("DelayedDays", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDelayedDays);
            }
            
            public tblBarrowedRow NewtblBarrowedRow() {
                return ((tblBarrowedRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tblBarrowedRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tblBarrowedRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblBarrowedRowChanged != null)) {
                    this.tblBarrowedRowChanged(this, new tblBarrowedRowChangeEvent(((tblBarrowedRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblBarrowedRowChanging != null)) {
                    this.tblBarrowedRowChanging(this, new tblBarrowedRowChangeEvent(((tblBarrowedRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblBarrowedRowDeleted != null)) {
                    this.tblBarrowedRowDeleted(this, new tblBarrowedRowChangeEvent(((tblBarrowedRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblBarrowedRowDeleting != null)) {
                    this.tblBarrowedRowDeleting(this, new tblBarrowedRowChangeEvent(((tblBarrowedRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetblBarrowedRow(tblBarrowedRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tblBarrowedRow : DataRow {
            
            private tblBarrowedDataTable tabletblBarrowed;
            
            internal tblBarrowedRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblBarrowed = ((tblBarrowedDataTable)(this.Table));
            }
            
            public string BarrowerID {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowed.BarrowerIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowed.BarrowerIDColumn] = value;
                }
            }
            
            public string Fullname {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowed.FullnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowed.FullnameColumn] = value;
                }
            }
            
            public string BookNo {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowed.BookNoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowed.BookNoColumn] = value;
                }
            }
            
            public string ISBN {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowed.ISBNColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowed.ISBNColumn] = value;
                }
            }
            
            public string BookTitle {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowed.BookTitleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowed.BookTitleColumn] = value;
                }
            }
            
            public string CategoryName {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowed.CategoryNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowed.CategoryNameColumn] = value;
                }
            }
            
            public System.DateTime DateBarrowed {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblBarrowed.DateBarrowedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowed.DateBarrowedColumn] = value;
                }
            }
            
            public System.DateTime DateDue {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblBarrowed.DateDueColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowed.DateDueColumn] = value;
                }
            }
            
            public System.DateTime DateRetured {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletblBarrowed.DateReturedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowed.DateReturedColumn] = value;
                }
            }
            
            public System.Double DelayedDays {
                get {
                    try {
                        return ((System.Double)(this[this.tabletblBarrowed.DelayedDaysColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowed.DelayedDaysColumn] = value;
                }
            }
            
            public bool IsBarrowerIDNull() {
                return this.IsNull(this.tabletblBarrowed.BarrowerIDColumn);
            }
            
            public void SetBarrowerIDNull() {
                this[this.tabletblBarrowed.BarrowerIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsFullnameNull() {
                return this.IsNull(this.tabletblBarrowed.FullnameColumn);
            }
            
            public void SetFullnameNull() {
                this[this.tabletblBarrowed.FullnameColumn] = System.Convert.DBNull;
            }
            
            public bool IsBookNoNull() {
                return this.IsNull(this.tabletblBarrowed.BookNoColumn);
            }
            
            public void SetBookNoNull() {
                this[this.tabletblBarrowed.BookNoColumn] = System.Convert.DBNull;
            }
            
            public bool IsISBNNull() {
                return this.IsNull(this.tabletblBarrowed.ISBNColumn);
            }
            
            public void SetISBNNull() {
                this[this.tabletblBarrowed.ISBNColumn] = System.Convert.DBNull;
            }
            
            public bool IsBookTitleNull() {
                return this.IsNull(this.tabletblBarrowed.BookTitleColumn);
            }
            
            public void SetBookTitleNull() {
                this[this.tabletblBarrowed.BookTitleColumn] = System.Convert.DBNull;
            }
            
            public bool IsCategoryNameNull() {
                return this.IsNull(this.tabletblBarrowed.CategoryNameColumn);
            }
            
            public void SetCategoryNameNull() {
                this[this.tabletblBarrowed.CategoryNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateBarrowedNull() {
                return this.IsNull(this.tabletblBarrowed.DateBarrowedColumn);
            }
            
            public void SetDateBarrowedNull() {
                this[this.tabletblBarrowed.DateBarrowedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateDueNull() {
                return this.IsNull(this.tabletblBarrowed.DateDueColumn);
            }
            
            public void SetDateDueNull() {
                this[this.tabletblBarrowed.DateDueColumn] = System.Convert.DBNull;
            }
            
            public bool IsDateReturedNull() {
                return this.IsNull(this.tabletblBarrowed.DateReturedColumn);
            }
            
            public void SetDateReturedNull() {
                this[this.tabletblBarrowed.DateReturedColumn] = System.Convert.DBNull;
            }
            
            public bool IsDelayedDaysNull() {
                return this.IsNull(this.tabletblBarrowed.DelayedDaysColumn);
            }
            
            public void SetDelayedDaysNull() {
                this[this.tabletblBarrowed.DelayedDaysColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tblBarrowedRowChangeEvent : EventArgs {
            
            private tblBarrowedRow eventRow;
            
            private DataRowAction eventAction;
            
            public tblBarrowedRowChangeEvent(tblBarrowedRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tblBarrowedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
