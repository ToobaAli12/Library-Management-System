//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace LibrarySystem {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsBarrowers : DataSet {
        
        private tblBarrowersDataTable tabletblBarrowers;
        
        public dsBarrowers() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsBarrowers(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblBarrowers"] != null)) {
                    this.Tables.Add(new tblBarrowersDataTable(ds.Tables["tblBarrowers"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblBarrowersDataTable tblBarrowers {
            get {
                return this.tabletblBarrowers;
            }
        }
        
        public override DataSet Clone() {
            dsBarrowers cln = ((dsBarrowers)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tblBarrowers"] != null)) {
                this.Tables.Add(new tblBarrowersDataTable(ds.Tables["tblBarrowers"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletblBarrowers = ((tblBarrowersDataTable)(this.Tables["tblBarrowers"]));
            if ((this.tabletblBarrowers != null)) {
                this.tabletblBarrowers.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsBarrowers";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsBarrowers.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletblBarrowers = new tblBarrowersDataTable();
            this.Tables.Add(this.tabletblBarrowers);
        }
        
        private bool ShouldSerializetblBarrowers() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tblBarrowersRowChangeEventHandler(object sender, tblBarrowersRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tblBarrowersDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnBarrowerID;
            
            private DataColumn columnFullname;
            
            private DataColumn columnStreetAddress;
            
            private DataColumn columnCityTown;
            
            private DataColumn columnProvince;
            
            private DataColumn columnContactNo;
            
            private DataColumn columnEmailAddress;
            
            private DataColumn columnCourseName;
            
            private DataColumn columnLevelName;
            
            internal tblBarrowersDataTable() : 
                    base("tblBarrowers") {
                this.InitClass();
            }
            
            internal tblBarrowersDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn BarrowerIDColumn {
                get {
                    return this.columnBarrowerID;
                }
            }
            
            internal DataColumn FullnameColumn {
                get {
                    return this.columnFullname;
                }
            }
            
            internal DataColumn StreetAddressColumn {
                get {
                    return this.columnStreetAddress;
                }
            }
            
            internal DataColumn CityTownColumn {
                get {
                    return this.columnCityTown;
                }
            }
            
            internal DataColumn ProvinceColumn {
                get {
                    return this.columnProvince;
                }
            }
            
            internal DataColumn ContactNoColumn {
                get {
                    return this.columnContactNo;
                }
            }
            
            internal DataColumn EmailAddressColumn {
                get {
                    return this.columnEmailAddress;
                }
            }
            
            internal DataColumn CourseNameColumn {
                get {
                    return this.columnCourseName;
                }
            }
            
            internal DataColumn LevelNameColumn {
                get {
                    return this.columnLevelName;
                }
            }
            
            public tblBarrowersRow this[int index] {
                get {
                    return ((tblBarrowersRow)(this.Rows[index]));
                }
            }
            
            public event tblBarrowersRowChangeEventHandler tblBarrowersRowChanged;
            
            public event tblBarrowersRowChangeEventHandler tblBarrowersRowChanging;
            
            public event tblBarrowersRowChangeEventHandler tblBarrowersRowDeleted;
            
            public event tblBarrowersRowChangeEventHandler tblBarrowersRowDeleting;
            
            public void AddtblBarrowersRow(tblBarrowersRow row) {
                this.Rows.Add(row);
            }
            
            public tblBarrowersRow AddtblBarrowersRow(string BarrowerID, string Fullname, string StreetAddress, string CityTown, string Province, string ContactNo, string EmailAddress, string CourseName, string LevelName) {
                tblBarrowersRow rowtblBarrowersRow = ((tblBarrowersRow)(this.NewRow()));
                rowtblBarrowersRow.ItemArray = new object[] {
                        BarrowerID,
                        Fullname,
                        StreetAddress,
                        CityTown,
                        Province,
                        ContactNo,
                        EmailAddress,
                        CourseName,
                        LevelName};
                this.Rows.Add(rowtblBarrowersRow);
                return rowtblBarrowersRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tblBarrowersDataTable cln = ((tblBarrowersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tblBarrowersDataTable();
            }
            
            internal void InitVars() {
                this.columnBarrowerID = this.Columns["BarrowerID"];
                this.columnFullname = this.Columns["Fullname"];
                this.columnStreetAddress = this.Columns["StreetAddress"];
                this.columnCityTown = this.Columns["CityTown"];
                this.columnProvince = this.Columns["Province"];
                this.columnContactNo = this.Columns["ContactNo"];
                this.columnEmailAddress = this.Columns["EmailAddress"];
                this.columnCourseName = this.Columns["CourseName"];
                this.columnLevelName = this.Columns["LevelName"];
            }
            
            private void InitClass() {
                this.columnBarrowerID = new DataColumn("BarrowerID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBarrowerID);
                this.columnFullname = new DataColumn("Fullname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFullname);
                this.columnStreetAddress = new DataColumn("StreetAddress", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStreetAddress);
                this.columnCityTown = new DataColumn("CityTown", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCityTown);
                this.columnProvince = new DataColumn("Province", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProvince);
                this.columnContactNo = new DataColumn("ContactNo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContactNo);
                this.columnEmailAddress = new DataColumn("EmailAddress", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEmailAddress);
                this.columnCourseName = new DataColumn("CourseName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCourseName);
                this.columnLevelName = new DataColumn("LevelName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLevelName);
            }
            
            public tblBarrowersRow NewtblBarrowersRow() {
                return ((tblBarrowersRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tblBarrowersRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tblBarrowersRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblBarrowersRowChanged != null)) {
                    this.tblBarrowersRowChanged(this, new tblBarrowersRowChangeEvent(((tblBarrowersRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblBarrowersRowChanging != null)) {
                    this.tblBarrowersRowChanging(this, new tblBarrowersRowChangeEvent(((tblBarrowersRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblBarrowersRowDeleted != null)) {
                    this.tblBarrowersRowDeleted(this, new tblBarrowersRowChangeEvent(((tblBarrowersRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblBarrowersRowDeleting != null)) {
                    this.tblBarrowersRowDeleting(this, new tblBarrowersRowChangeEvent(((tblBarrowersRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetblBarrowersRow(tblBarrowersRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tblBarrowersRow : DataRow {
            
            private tblBarrowersDataTable tabletblBarrowers;
            
            internal tblBarrowersRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblBarrowers = ((tblBarrowersDataTable)(this.Table));
            }
            
            public string BarrowerID {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowers.BarrowerIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowers.BarrowerIDColumn] = value;
                }
            }
            
            public string Fullname {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowers.FullnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowers.FullnameColumn] = value;
                }
            }
            
            public string StreetAddress {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowers.StreetAddressColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowers.StreetAddressColumn] = value;
                }
            }
            
            public string CityTown {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowers.CityTownColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowers.CityTownColumn] = value;
                }
            }
            
            public string Province {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowers.ProvinceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowers.ProvinceColumn] = value;
                }
            }
            
            public string ContactNo {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowers.ContactNoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowers.ContactNoColumn] = value;
                }
            }
            
            public string EmailAddress {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowers.EmailAddressColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowers.EmailAddressColumn] = value;
                }
            }
            
            public string CourseName {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowers.CourseNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowers.CourseNameColumn] = value;
                }
            }
            
            public string LevelName {
                get {
                    try {
                        return ((string)(this[this.tabletblBarrowers.LevelNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBarrowers.LevelNameColumn] = value;
                }
            }
            
            public bool IsBarrowerIDNull() {
                return this.IsNull(this.tabletblBarrowers.BarrowerIDColumn);
            }
            
            public void SetBarrowerIDNull() {
                this[this.tabletblBarrowers.BarrowerIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsFullnameNull() {
                return this.IsNull(this.tabletblBarrowers.FullnameColumn);
            }
            
            public void SetFullnameNull() {
                this[this.tabletblBarrowers.FullnameColumn] = System.Convert.DBNull;
            }
            
            public bool IsStreetAddressNull() {
                return this.IsNull(this.tabletblBarrowers.StreetAddressColumn);
            }
            
            public void SetStreetAddressNull() {
                this[this.tabletblBarrowers.StreetAddressColumn] = System.Convert.DBNull;
            }
            
            public bool IsCityTownNull() {
                return this.IsNull(this.tabletblBarrowers.CityTownColumn);
            }
            
            public void SetCityTownNull() {
                this[this.tabletblBarrowers.CityTownColumn] = System.Convert.DBNull;
            }
            
            public bool IsProvinceNull() {
                return this.IsNull(this.tabletblBarrowers.ProvinceColumn);
            }
            
            public void SetProvinceNull() {
                this[this.tabletblBarrowers.ProvinceColumn] = System.Convert.DBNull;
            }
            
            public bool IsContactNoNull() {
                return this.IsNull(this.tabletblBarrowers.ContactNoColumn);
            }
            
            public void SetContactNoNull() {
                this[this.tabletblBarrowers.ContactNoColumn] = System.Convert.DBNull;
            }
            
            public bool IsEmailAddressNull() {
                return this.IsNull(this.tabletblBarrowers.EmailAddressColumn);
            }
            
            public void SetEmailAddressNull() {
                this[this.tabletblBarrowers.EmailAddressColumn] = System.Convert.DBNull;
            }
            
            public bool IsCourseNameNull() {
                return this.IsNull(this.tabletblBarrowers.CourseNameColumn);
            }
            
            public void SetCourseNameNull() {
                this[this.tabletblBarrowers.CourseNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsLevelNameNull() {
                return this.IsNull(this.tabletblBarrowers.LevelNameColumn);
            }
            
            public void SetLevelNameNull() {
                this[this.tabletblBarrowers.LevelNameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tblBarrowersRowChangeEvent : EventArgs {
            
            private tblBarrowersRow eventRow;
            
            private DataRowAction eventAction;
            
            public tblBarrowersRowChangeEvent(tblBarrowersRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tblBarrowersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
