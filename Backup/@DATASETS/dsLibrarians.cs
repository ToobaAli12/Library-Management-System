//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace LibrarySystem {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsLibrarians : DataSet {
        
        private tblLibrarianDataTable tabletblLibrarian;
        
        public dsLibrarians() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsLibrarians(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblLibrarian"] != null)) {
                    this.Tables.Add(new tblLibrarianDataTable(ds.Tables["tblLibrarian"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblLibrarianDataTable tblLibrarian {
            get {
                return this.tabletblLibrarian;
            }
        }
        
        public override DataSet Clone() {
            dsLibrarians cln = ((dsLibrarians)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tblLibrarian"] != null)) {
                this.Tables.Add(new tblLibrarianDataTable(ds.Tables["tblLibrarian"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletblLibrarian = ((tblLibrarianDataTable)(this.Tables["tblLibrarian"]));
            if ((this.tabletblLibrarian != null)) {
                this.tabletblLibrarian.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsLibrarians";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsLibrarians.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletblLibrarian = new tblLibrarianDataTable();
            this.Tables.Add(this.tabletblLibrarian);
        }
        
        private bool ShouldSerializetblLibrarian() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tblLibrarianRowChangeEventHandler(object sender, tblLibrarianRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tblLibrarianDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnLibrarianID;
            
            private DataColumn columnFullname;
            
            private DataColumn columnStreetAddress;
            
            private DataColumn columnCityTown;
            
            private DataColumn columnProvince;
            
            private DataColumn columnContactNo;
            
            private DataColumn columnEmailAddress;
            
            private DataColumn columnUserName;
            
            internal tblLibrarianDataTable() : 
                    base("tblLibrarian") {
                this.InitClass();
            }
            
            internal tblLibrarianDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn LibrarianIDColumn {
                get {
                    return this.columnLibrarianID;
                }
            }
            
            internal DataColumn FullnameColumn {
                get {
                    return this.columnFullname;
                }
            }
            
            internal DataColumn StreetAddressColumn {
                get {
                    return this.columnStreetAddress;
                }
            }
            
            internal DataColumn CityTownColumn {
                get {
                    return this.columnCityTown;
                }
            }
            
            internal DataColumn ProvinceColumn {
                get {
                    return this.columnProvince;
                }
            }
            
            internal DataColumn ContactNoColumn {
                get {
                    return this.columnContactNo;
                }
            }
            
            internal DataColumn EmailAddressColumn {
                get {
                    return this.columnEmailAddress;
                }
            }
            
            internal DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            public tblLibrarianRow this[int index] {
                get {
                    return ((tblLibrarianRow)(this.Rows[index]));
                }
            }
            
            public event tblLibrarianRowChangeEventHandler tblLibrarianRowChanged;
            
            public event tblLibrarianRowChangeEventHandler tblLibrarianRowChanging;
            
            public event tblLibrarianRowChangeEventHandler tblLibrarianRowDeleted;
            
            public event tblLibrarianRowChangeEventHandler tblLibrarianRowDeleting;
            
            public void AddtblLibrarianRow(tblLibrarianRow row) {
                this.Rows.Add(row);
            }
            
            public tblLibrarianRow AddtblLibrarianRow(string LibrarianID, string Fullname, string StreetAddress, string CityTown, string Province, string ContactNo, string EmailAddress, string UserName) {
                tblLibrarianRow rowtblLibrarianRow = ((tblLibrarianRow)(this.NewRow()));
                rowtblLibrarianRow.ItemArray = new object[] {
                        LibrarianID,
                        Fullname,
                        StreetAddress,
                        CityTown,
                        Province,
                        ContactNo,
                        EmailAddress,
                        UserName};
                this.Rows.Add(rowtblLibrarianRow);
                return rowtblLibrarianRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tblLibrarianDataTable cln = ((tblLibrarianDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tblLibrarianDataTable();
            }
            
            internal void InitVars() {
                this.columnLibrarianID = this.Columns["LibrarianID"];
                this.columnFullname = this.Columns["Fullname"];
                this.columnStreetAddress = this.Columns["StreetAddress"];
                this.columnCityTown = this.Columns["CityTown"];
                this.columnProvince = this.Columns["Province"];
                this.columnContactNo = this.Columns["ContactNo"];
                this.columnEmailAddress = this.Columns["EmailAddress"];
                this.columnUserName = this.Columns["UserName"];
            }
            
            private void InitClass() {
                this.columnLibrarianID = new DataColumn("LibrarianID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLibrarianID);
                this.columnFullname = new DataColumn("Fullname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFullname);
                this.columnStreetAddress = new DataColumn("StreetAddress", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStreetAddress);
                this.columnCityTown = new DataColumn("CityTown", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCityTown);
                this.columnProvince = new DataColumn("Province", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProvince);
                this.columnContactNo = new DataColumn("ContactNo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContactNo);
                this.columnEmailAddress = new DataColumn("EmailAddress", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEmailAddress);
                this.columnUserName = new DataColumn("UserName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUserName);
            }
            
            public tblLibrarianRow NewtblLibrarianRow() {
                return ((tblLibrarianRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tblLibrarianRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tblLibrarianRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblLibrarianRowChanged != null)) {
                    this.tblLibrarianRowChanged(this, new tblLibrarianRowChangeEvent(((tblLibrarianRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblLibrarianRowChanging != null)) {
                    this.tblLibrarianRowChanging(this, new tblLibrarianRowChangeEvent(((tblLibrarianRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblLibrarianRowDeleted != null)) {
                    this.tblLibrarianRowDeleted(this, new tblLibrarianRowChangeEvent(((tblLibrarianRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblLibrarianRowDeleting != null)) {
                    this.tblLibrarianRowDeleting(this, new tblLibrarianRowChangeEvent(((tblLibrarianRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetblLibrarianRow(tblLibrarianRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tblLibrarianRow : DataRow {
            
            private tblLibrarianDataTable tabletblLibrarian;
            
            internal tblLibrarianRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblLibrarian = ((tblLibrarianDataTable)(this.Table));
            }
            
            public string LibrarianID {
                get {
                    try {
                        return ((string)(this[this.tabletblLibrarian.LibrarianIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLibrarian.LibrarianIDColumn] = value;
                }
            }
            
            public string Fullname {
                get {
                    try {
                        return ((string)(this[this.tabletblLibrarian.FullnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLibrarian.FullnameColumn] = value;
                }
            }
            
            public string StreetAddress {
                get {
                    try {
                        return ((string)(this[this.tabletblLibrarian.StreetAddressColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLibrarian.StreetAddressColumn] = value;
                }
            }
            
            public string CityTown {
                get {
                    try {
                        return ((string)(this[this.tabletblLibrarian.CityTownColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLibrarian.CityTownColumn] = value;
                }
            }
            
            public string Province {
                get {
                    try {
                        return ((string)(this[this.tabletblLibrarian.ProvinceColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLibrarian.ProvinceColumn] = value;
                }
            }
            
            public string ContactNo {
                get {
                    try {
                        return ((string)(this[this.tabletblLibrarian.ContactNoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLibrarian.ContactNoColumn] = value;
                }
            }
            
            public string EmailAddress {
                get {
                    try {
                        return ((string)(this[this.tabletblLibrarian.EmailAddressColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLibrarian.EmailAddressColumn] = value;
                }
            }
            
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tabletblLibrarian.UserNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblLibrarian.UserNameColumn] = value;
                }
            }
            
            public bool IsLibrarianIDNull() {
                return this.IsNull(this.tabletblLibrarian.LibrarianIDColumn);
            }
            
            public void SetLibrarianIDNull() {
                this[this.tabletblLibrarian.LibrarianIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsFullnameNull() {
                return this.IsNull(this.tabletblLibrarian.FullnameColumn);
            }
            
            public void SetFullnameNull() {
                this[this.tabletblLibrarian.FullnameColumn] = System.Convert.DBNull;
            }
            
            public bool IsStreetAddressNull() {
                return this.IsNull(this.tabletblLibrarian.StreetAddressColumn);
            }
            
            public void SetStreetAddressNull() {
                this[this.tabletblLibrarian.StreetAddressColumn] = System.Convert.DBNull;
            }
            
            public bool IsCityTownNull() {
                return this.IsNull(this.tabletblLibrarian.CityTownColumn);
            }
            
            public void SetCityTownNull() {
                this[this.tabletblLibrarian.CityTownColumn] = System.Convert.DBNull;
            }
            
            public bool IsProvinceNull() {
                return this.IsNull(this.tabletblLibrarian.ProvinceColumn);
            }
            
            public void SetProvinceNull() {
                this[this.tabletblLibrarian.ProvinceColumn] = System.Convert.DBNull;
            }
            
            public bool IsContactNoNull() {
                return this.IsNull(this.tabletblLibrarian.ContactNoColumn);
            }
            
            public void SetContactNoNull() {
                this[this.tabletblLibrarian.ContactNoColumn] = System.Convert.DBNull;
            }
            
            public bool IsEmailAddressNull() {
                return this.IsNull(this.tabletblLibrarian.EmailAddressColumn);
            }
            
            public void SetEmailAddressNull() {
                this[this.tabletblLibrarian.EmailAddressColumn] = System.Convert.DBNull;
            }
            
            public bool IsUserNameNull() {
                return this.IsNull(this.tabletblLibrarian.UserNameColumn);
            }
            
            public void SetUserNameNull() {
                this[this.tabletblLibrarian.UserNameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tblLibrarianRowChangeEvent : EventArgs {
            
            private tblLibrarianRow eventRow;
            
            private DataRowAction eventAction;
            
            public tblLibrarianRowChangeEvent(tblLibrarianRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tblLibrarianRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
